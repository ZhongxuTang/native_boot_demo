name: Build Native Image

on:
  push:
    branches:
      - config

jobs:
  #build:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v3
#
  #    - name: Set up GraalVM 17 (Ubuntu x64)
  #      uses: graalvm/setup-graalvm@v1
  #      with:
  #        java-version: '17.0.12'
  #        java-package: jdk
  #        architecture: x64
  #        components: native-image
#
  #    - name: Build on Ubuntu x64
  #      run: |
  #        ./gradlew nativeCompile
  #      env:
  #        JAVA_HOME: ${{ steps.graalvm.outputs.native-image-bin-dir }}
#
  #    - name: Archive production artifacts (Ubuntu x64)
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: native-application-ubuntu-x64
  #        path: build/native/nativeCompile/*

  #build_windows:
  #  runs-on: windows-latest
  #  needs: build
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v3
#
  #    - name: Set up GraalVM 17 (Windows x64)
  #      uses: graalvm/setup-graalvm@v1
  #      with:
  #        java-version: '17.0.12'
  #        java-package: jdk
  #        architecture: x64
  #        components: native-image
#
  #    - name: Build on Windows x64
  #      run: |
  #        ./gradlew nativeCompile
  #      env:
  #        JAVA_HOME: ${{ steps.graalvm.outputs.native-image-bin-dir }}
#
  #    - name: Archive production artifacts (Windows x64)
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: native-application-windows-x64
  #        path: build/native/nativeCompile/*
#
  build_macos:
    runs-on: macos-latest
    #needs: build_windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GraalVM 17 (macOS ARM64)
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.12'
          java-package: jdk
          architecture: arm64
          components: native-image

      - name: Build on macOS ARM64
        run: |
          export GRAALVM_OPTS="-Xmx4g"
          ./gradlew nativeCompile
        env:
          JAVA_HOME: ${{ steps.graalvm.outputs.native-image-bin-dir }}

      - name: Archive production artifacts (macOS ARM64)
        uses: actions/upload-artifact@v3
        with:
          name: native-application-macos-arm64
          path: build/native/nativeCompile/*

  release:
    runs-on: ubuntu-latest
    needs: build_macos
    steps:
      - name: Download Ubuntu x64 Artifact
        uses: actions/download-artifact@v3
        with:
          name: native-application-ubuntu-x64

      - name: Download Windows x64 Artifact
        uses: actions/download-artifact@v3
        with:
          name: native-application-windows-x64

      - name: Download macOS ARM64 Artifact
        uses: actions/download-artifact@v3
        with:
          name: native-application-macos-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release from GitHub Actions
          draft: false
          prerelease: false
          generate_release_notes: false
          files: |
            native-application-ubuntu-x64/*
            native-application-windows-x64/*
            native-application-macos-arm64/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}